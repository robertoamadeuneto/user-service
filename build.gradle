plugins {
    id 'org.springframework.boot' version '2.1.5.RELEASE'
    id 'java'
    id 'com.avast.gradle.docker-compose' version '0.9.1'
    id 'com.adarshr.test-logger' version '1.6.0'
}

apply plugin: 'io.spring.dependency-management'
apply plugin: 'jacoco'

group = 'br.com.constock'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', 'Greenwich.SR1')
    set('springSecurityVersion', '5.1.5.RELEASE')
    set('lombokVersion', '1.18.6')
    set('assertjVersion', '3.11.1')
    set('powerMockVersion', '2.0.2')
    set('hibernateTypesVersion', '2.4.1')
}

dependencies {
    compileOnly "org.projectlombok:lombok:${lombokVersion}"

    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"

    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.cloud:spring-cloud-stream'
    implementation "org.springframework.security:spring-security-crypto:${springSecurityVersion}"
    implementation "com.vladmihalcea:hibernate-types-52:${hibernateTypesVersion}"

    runtimeOnly 'org.springframework.cloud:spring-cloud-stream-binder-rabbit'
    runtimeOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'org.postgresql:postgresql'
    runtimeOnly 'org.flywaydb:flyway-core'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.cloud:spring-cloud-stream-test-support'
    testImplementation "org.assertj:assertj-core:${assertjVersion}"
    testImplementation "org.powermock:powermock-api-mockito2:${powerMockVersion}"
    testImplementation "org.powermock:powermock-module-junit4:${powerMockVersion}"

}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks {
    test {
        systemProperty "spring.profiles.active", "local"
    }
}

dockerCompose {
    isRequiredBy(test)
}

testlogger {
    setTheme("mocha")
}

jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled false
    }
}
